"           _
"    __   _(_)_ __ ___  _ __ ____
"    \ \ / / | '_ ` _ \| `__/  __|
"  _  \ V /| | | | | | | |  | (__
" (_)  \_/ |_|_| |_| |_|_|  \____|
"
" hapidznur's .vimrc file
"

set nocompatible              " required
filetype off                  " required
set hidden
set showtabline=0

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
"-------------------=== Code/Project navigation ===-------------
Plugin 'scrooloose/nerdtree'                " Project and file navigation
Plugin 'Xuyuanp/nerdtree-git-plugin'        " NerdTree git functionality
Plugin 'vim-airline/vim-airline'            " Lean & mean status/tabline for vim
Plugin 'vim-airline/vim-airline-themes'     " Themes for airline
Plugin 'junegunn/fzf.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'godlygeek/tabular'                  "markdown
Plugin 'plasticboy/vim-markdown'            "markdown
"-------------------=== Other ===-------------------------------
Plugin 'tpope/vim-fugitive'                   " Git Operation:s
Plugin 'kien/rainbow_parentheses.vim'       " Rainbow Parentheses
Plugin 'chriskempson/base16-vim'            " Base 16 colors
Plugin 'sickill/vim-monokai'
"-------------------=== Snippets support ===--------------------
Plugin 'cakebaker/scss-syntax.vim'          " Sassy CSS
Plugin 'tikhomirov/vim-glsl'                " OpenGL
"-------------------=== Languages support ===-------------------
Plugin 'scrooloose/nerdcommenter'           " Easy code documentation
Plugin 'mitsuhiko/vim-sparkup'              " Sparkup(XML/jinja/htlm-django/etc.) support

"-------------------=== Python  ===-----------------------------
Plugin 'tell-k/vim-autopep8'                " autopep8
Plugin 'Chiel92/vim-autoformat'             " auto format for python
" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype on
filetype plugin on
filetype plugin indent on

" ---------
" Option
" ---------
set autoindent              " Carry over indenting from previous line
set autoread                " Don't bother me hen a file changes
set autowrite               " Write on :next/:prev/^Z
set backspace=indent,eol,start
" Allow backspace beyond insertion point
set cindent                 " Automatic program indenting
set cinkeys-=0#             " Comments don't fiddle with indenting
set cino=                   " See :h cinoptions-values
set commentstring=\ \ #%s   " When folds are created, add them to this
set copyindent              " Make autoindent use the same chars as prev line
set directory-=.            " Don't store temp files in cwd
set encoding=utf8           " UTF-8 by default
set expandtab               " No tabs
set fileformats=unix,dos,mac  " Prefer Unix
set fillchars=vert:\ ,stl:\ ,stlnc:\ ,fold:-,diff:┄
" Unicode chars for diffs/folds, and rely on
" Colors for window borders
silent! set foldmethod=marker " Use braces by default
set formatoptions=tcqn1     " t - autowrap normal text
" c - autowrap comments
" q - gq formats comments
" n - autowrap lists
" 1 - break _before_ single-letter words
" 2 - use indenting from 2nd line of para
set hidden                  " Don't prompt to save hidden windows until exit
set history=200             " How many lines of history to save
set hlsearch                " Hilight searching
set ignorecase              " Case insensitive
set incsearch               " Search as you type
set infercase               " Completion recognizes capitalization
set laststatus=2            " Always show the status bar
set linebreak               " Break long lines by word, not char
set list                    " Show whitespace as special chars - see listchars
set listchars=tab:»\ ,extends:›,precedes:‹,nbsp:·,trail:· " Unicode characters for various things
set matchtime=2             " Tenths of second to hilight matching paren
set modelines=5             " How many lines of head & tail to look for ml's
silent! set mouse=nvc       " Use the mouse, but not in insert mode
set nobackup                " No backups left after done editing
set nonumber                " No line numbers to start
set visualbell t_vb=        " No flashing or beeping at all
set nowritebackup           " No backups made while editing
set printoptions=paper:letter " US paper
set ruler                   " Show row/col and percentage
set scroll=4                " Number of lines to scroll with ^U/^D
set scrolloff=15            " Keep cursor away from this many chars top/bot
set sessionoptions-=options " Don't save runtimepath in Vim session (see tpope/vim-pathogen docs)
set shiftround              " Shift to certain columns, not just n spaces
set shortmess+=A            " Don't bother me when a swapfile exists
set showbreak=              " Show for lines that have been wrapped, like Emacs
set showmatch               " Hilight matching braces/parens/etc.
set sidescrolloff=3         " Keep cursor away from this many chars left/right
set smartcase               " Lets you search for ALL CAPS
set smartindent             " smart indent
set suffixes+=.pyc          " Ignore these files when tab-completing
set shiftwidth=4
set tabstop=4
set softtabstop=4           " Spaces 'feel' like tabs
set textwidth=100           " 100 is the new 80
set notitle                 " Don't set the title of the Vim window
set wildmenu                " Show possible completions on command line
set wildmode=list:longest,full " List all options and complete
set wildignore=*.class,*.o,*~,*.pyc,.git,node_modules  " Ignore certain files in tab-completion

" ----------------------------
" Custom Commands and Functions
" -----------------------------
command! Q q
command! W w

" ----------------
" Plugin Setttings
" ----------------
" FZF (replaces Ctrl-P, FuzzyFinder and Command-T)
set rtp+=/usr/local/opt/fzf
set rtp+=~/.fzf
nmap ; :Buffers<CR>
nmap <Leader>r :Tags<CR>
nmap <Leader>t :Files<CR>
nmap <Leader>a :Ag<CR>

" Tell ack.vim to use ag (the Silver Searcher) instead
let g:ackprg = 'ag --vimgrep'

" GitGutter styling to use · instead of +/-
let g:gitgutter_sign_added = '∙'
let g:gitgutter_sign_modified = '∙'
let g:gitgutter_sign_removed = '∙'
let g:gitgutter_sign_modified_removed = '∙'

" disable indent
noremap <F8> :setl noai nocin nosi inde=<CR>

" NERDTree PLugin
nmap \e :NERDTreeToggle<cr>
let g:NERDTreeWinSize=17
let NERDTreeIgnore=['\.pyc$', '\.pyo$', '__pycache__$']     " Ignore files in NERDTree
let NERDTreeWinSize=40
autocmd VimEnter * if !argc() | NERDTree | endif  " Load NERDTree only if vim is run without arguments

" vim-airline
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

"  Colors
" ----------------
set background=dark
let g:rehash256 = 1
set t_Co=256  " vim-sublime-monokai now only support 256 colours in terminal.
syntax on
colorscheme monokai

" Formatting Code
" ---------------
noremap <F3> :Autoformat<CR>
let g:formatdef_autopep8 = "'autopep8 - --range '.a:firstline.' '.a:lastline"
let g:formatters_python = ['autopep8']
let g:autopep8_ignore="E501,W293"
let g:autopep8_select="E501,W293"
let g:autopep8_aggressive=1
let g:autopep8_max_line_length=79
let g:autopep8_pep8_passes=100
let g:autopep8_indent_size=2
let g:autopep8_disable_show_diff=1

" ----------------
"  File Type Commands
" ---------------
" Reset all autocommands
augroup vimrc
    autocmd!

    au BufNewFile,BufRead *.csv     setf csv
    au BufNewFile,BufRead *.ini     setf conf
    au BufNewFile,BufRead *.json    set ft=json tw=0
    au BufNewFile,BufRead *.less    setf less
    au BufNewFile,BufRead *.less    setlocal nocindent smartindent
    au BufNewFile,BufRead *.md      setlocal ft=markdown nolist spell
    au BufNewFile,BufRead *.md,*.markdown setlocal foldlevel=999 tw=0 nocin
    au BufNewFile,BufRead *.rb      setlocal noai
    au BufNewFile,BufRead *.sass    setf sass
    au BufNewFile,BufRead *.scss    setf scss
    au BufNewFile,BufRead *.xml     setlocal ft=xml  ts=2 sw=2 et
    au BufNewFile,BufRead *.yaml    setlocal ft=yaml
    au BufNewFile,BufRead *.zshrc   setf zsh number
    au BufNewFile,BufRead *templates/*.html setf htmldjango
    au BufNewFile,BufRead .git/config setlocal ft=gitconfig nolist ts=4 sw=4 noet
    au BufNewFile,BufRead .gitconfig* setlocal ft=gitconfig nolist ts=4 sw=4 noet
    au BufNewFile,BufRead .vimlocal,.gvimlocal setf vim
    au BufNewFile,BufRead .zshlocal setf zsh
    au BufNewFile,BufRead /etc/apache*/* setf apache
    au BufNewFile,BufRead /tmp/crontab* setf crontab
    au BufNewFile,BufRead /usr/share/zsh/*/functions/* setf zsh
    au BufNewFile,BufRead Makefile setlocal nolist
    au FileType json setlocal conceallevel=0 foldmethod=syntax foldlevel=999
    au Filetype gitcommit setlocal tw=80
    au FileType gitcommit setlocal nolist ts=4 sts=4 sw=4 noet
    au FileType make setlocal nolist ts=4 sts=4 sw=4 noet

augroup END
autocmd BufRead,BufNewFile *.yml,*.yaml setlocal tabstop=2 shiftwidth=2 softtabstop=2

autocmd BufRead,BufNewFile *.py setlocal tabstop=4 shiftwidth=4 softtabstop=4
autocmd BufRead,BufNewFile *.blade.php,*.php,*.htm,*.html, setlocal tabstop=2 shiftwidth=2 softtabstop=2

filetype on
filetype plugin on
filetype plugin indent on

" ----------
"  Vim Markdown
"  ---------
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_math = 1
let g:vim_markdown_edit_url_in = 'tab'


" ----------------
"  Custom VIM file
" ----------------

" Now load specifics to this host
" ----------------
if filereadable(expand("~/.vimlocal"))
    source ~/.vimlocal
endif

" Some plugin seems to search for something at startup, so this fixes that.
silent! nohlsearch

" --------
" KEY MAPS
" --------
" Moving tabs
noremap <A-j> gT
noremap <A-k> gt

" ctrl + s as save
noremap <silent> <C-S>          :update<CR>
vnoremap <silent> <C-S>         <C-C>:update<CR>
inoremap <silent> <C-S>         <C-O>:update<CR>


